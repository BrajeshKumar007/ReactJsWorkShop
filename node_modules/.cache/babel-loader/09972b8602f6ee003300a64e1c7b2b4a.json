{"ast":null,"code":"import _regeneratorRuntime from\"D:/ReactWorkShop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/ReactWorkShop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/**\n * Generate base URL including OMDB required params\n * @param {string} url\n * @returns {string}\n */var getBaseURL=function getBaseURL(url){return\"\".concat(url);};// Function to rename a key in an object\nfunction renameKey(obj,oldKey,newKey){if(obj.hasOwnProperty(oldKey)){obj[newKey]=obj[oldKey];delete obj[oldKey];}}/**\n * Service object exported to use across application\n */var service={get:function(){var _get=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url,params){var response,contentItems,obj;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"\".concat(getBaseURL(url+params)),{method:\"GET\",cache:\"no-cache\",// *default, no-cache, reload, force-cache, only-if-cached\nheaders:{\"Content-Type\":\"application/x-www-form-urlencoded\"// application/x-www-form-urlencoded, application/json\n}}).then(function(res){return res.json();});case 3:response=_context.sent;// if (!response.page.title) {\n//   throw Error(response.Error);\n// } else {\ncontentItems=response.page[\"content-items\"].content;contentItems.forEach(function(item){renameKey(item,\"poster-image\",\"Poster\");});obj={contentItems:contentItems,\"totalContent\":response.page[\"total-content-items\"]};return _context.abrupt(\"return\",obj);case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);throw _context.t0;case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));function get(_x,_x2){return _get.apply(this,arguments);}return get;}(),post:function(){var _post=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url,data){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(getBaseURL(url),{method:\"POST\",cache:\"no-cache\",// *default, no-cache, reload, force-cache, only-if-cached\nheaders:{\"Content-Type\":\"application/x-www-form-urlencoded\"// application/x-www-form-urlencoded, application/json\n},body:JSON.stringify(data)});case 2:response=_context2.sent;return _context2.abrupt(\"return\",response.json());case 4:case\"end\":return _context2.stop();}}},_callee2);}));function post(_x3,_x4){return _post.apply(this,arguments);}return post;}()};export default service;","map":{"version":3,"sources":["D:/ReactWorkShop/src/utils/service.ts"],"names":["getBaseURL","url","renameKey","obj","oldKey","newKey","hasOwnProperty","service","get","params","fetch","method","cache","headers","then","res","json","response","contentItems","page","content","forEach","item","post","data","body","JSON","stringify"],"mappings":"2QACA;AACA;AACA;AACA;AACA,GACA,GAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,GAAD,CAAyB,CAC1C,gBAAUA,GAAV,EACD,CAFD,CAGA;AACA,QAASC,CAAAA,SAAT,CAAmBC,GAAnB,CAA6BC,MAA7B,CAA0CC,MAA1C,CAAuD,CACrD,GAAIF,GAAG,CAACG,cAAJ,CAAmBF,MAAnB,CAAJ,CAAgC,CAC9BD,GAAG,CAACE,MAAD,CAAH,CAAcF,GAAG,CAACC,MAAD,CAAjB,CACA,MAAOD,CAAAA,GAAG,CAACC,MAAD,CAAV,CACD,CACF,CACD;AACA;AACA,GACA,GAAMG,CAAAA,OAAO,CAAG,CACdC,GAAG,6EAAE,iBAAOP,GAAP,CAAoBQ,MAApB,sLAEoBC,CAAAA,KAAK,WACrBV,UAAU,CAACC,GAAG,CAAGQ,MAAP,CADW,EAExB,CACEE,MAAM,CAAE,KADV,CAEEC,KAAK,CAAE,UAFT,CAEqB;AACnBC,OAAO,CAAE,CACP,eAAgB,mCAAqC;AAD9C,CAHX,CAFwB,CAAL,CASnBC,IATmB,CASd,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EATc,CAFpB,QAEGC,QAFH,eAaD;AACA;AACA;AACQC,YAhBP,CAgBsBD,QAAQ,CAACE,IAAT,CAAc,eAAd,EAA+BC,OAhBrD,CAiBCF,YAAY,CAACG,OAAb,CAAqB,SAACC,IAAD,CAAc,CACjCpB,SAAS,CAACoB,IAAD,CAAO,cAAP,CAAuB,QAAvB,CAAT,CACD,CAFD,EAGInB,GApBL,CAoBU,CACPe,YAAY,CAAZA,YADO,CAEP,eAAeD,QAAQ,CAACE,IAAT,CAAc,qBAAd,CAFR,CApBV,iCAwBQhB,GAxBR,mJAAF,yEADW,CA+BdoB,IAAI,8EAAE,kBAAOtB,GAAP,CAAoBuB,IAApB,0JACmBd,CAAAA,KAAK,CAACV,UAAU,CAACC,GAAD,CAAX,CAAkB,CAC5CU,MAAM,CAAE,MADoC,CAE5CC,KAAK,CAAE,UAFqC,CAEzB;AACnBC,OAAO,CAAE,CACP,eAAgB,mCAAqC;AAD9C,CAHmC,CAM5CY,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf,CANsC,CAAlB,CADxB,QACEP,QADF,iDASGA,QAAQ,CAACD,IAAT,EATH,0DAAF,6EA/BU,CAAhB,CA4CA,cAAeT,CAAAA,OAAf","sourcesContent":["\n/**\n * Generate base URL including OMDB required params\n * @param {string} url\n * @returns {string}\n */\nconst getBaseURL = (url: string): string => {\n  return `${url}`;\n};\n// Function to rename a key in an object\nfunction renameKey(obj: any, oldKey: any, newKey: any) {\n  if (obj.hasOwnProperty(oldKey)) {\n    obj[newKey] = obj[oldKey];\n    delete obj[oldKey];\n  }\n}\n/**\n * Service object exported to use across application\n */\nconst service = {\n  get: async (url: string, params: string) => {\n    try {\n      let response = await fetch(\n        `${getBaseURL(url + params)}`,\n        {\n          method: \"GET\",\n          cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\", // application/x-www-form-urlencoded, application/json\n          },\n        }\n      ).then((res) => res.json());\n\n      // if (!response.page.title) {\n      //   throw Error(response.Error);\n      // } else {\n        const contentItems = response.page[\"content-items\"].content;\n        contentItems.forEach((item:any) => {\n          renameKey(item, \"poster-image\", \"Poster\");\n        });\n        let obj ={\n          contentItems,\n          \"totalContent\":response.page[\"total-content-items\"]\n        }        \n        return obj;\n      // }\n    } catch (error) {\n      throw error;\n    }\n  },\n  post: async (url: string, data: object) => {\n    const response = await fetch(getBaseURL(url), {\n      method: \"POST\",\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\", // application/x-www-form-urlencoded, application/json\n      },\n      body: JSON.stringify(data),\n    });\n    return response.json(); // parses JSON response into native JavaScript objects\n  },\n};\n\nexport default service;\n"]},"metadata":{},"sourceType":"module"}