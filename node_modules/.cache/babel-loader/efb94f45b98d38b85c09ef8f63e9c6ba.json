{"ast":null,"code":"import _toConsumableArray from\"D:/ReactWorkShop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:/ReactWorkShop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import styles from\"./index.module.css\";import service from\"utils/service\";import CONSTANTS from\"utils/constants\";import{useInfiniteQuery}from\"react-query\";import MovieCard from\"components/MovieCard\";import Skeleton from\"components/MovieCard/Skeleton\";import{Grid}from\"@material-ui/core\";import InfiniteScroll from\"react-infinite-scroll-component\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Home=function Home(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];var fetchMovies=function fetchMovies(_ref){var _ref$pageParam=_ref.pageParam,pageParam=_ref$pageParam===void 0?1:_ref$pageParam;return service.get(CONSTANTS.BASE_URL,\"data/page\".concat(pageParam,\".json\"));};var _useInfiniteQuery=useInfiniteQuery(\"movies\",fetchMovies,{getNextPageParam:function getNextPageParam(lastPage,pages){return+lastPage.totalContent>currentPage*20?currentPage+1:null;},onSuccess:function onSuccess(){setCurrentPage(currentPage+1);}}),data=_useInfiniteQuery.data,error=_useInfiniteQuery.error,fetchNextPage=_useInfiniteQuery.fetchNextPage,hasNextPage=_useInfiniteQuery.hasNextPage,isSuccess=_useInfiniteQuery.isSuccess,isLoading=_useInfiniteQuery.isLoading,refetch=_useInfiniteQuery.refetch,remove=_useInfiniteQuery.remove;var allItems=(data===null||data===void 0?void 0:data.pages.flatMap(function(page){return page.contentItems;}))||[];var MoviesLoader=function MoviesLoader(itemCount){return/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:_toConsumableArray(new Array(itemCount)).map(function(_,i){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:3,sm:4,lg:12,xl:12,children:/*#__PURE__*/_jsx(Skeleton,{})},i);})});};return/*#__PURE__*/_jsx(\"div\",{className:styles.root,children:/*#__PURE__*/_jsx(Grid,{container:true,justify:\"center\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:10,children:/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,className:styles.movieListContainer,children:[isLoading&&MoviesLoader(8),isSuccess&&(!!data?/*#__PURE__*/_jsx(InfiniteScroll,{dataLength:allItems.length,next:fetchNextPage,hasMore:hasNextPage||false,loader:MoviesLoader(4),style:{overflow:\"hidden\"},children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:allItems.map(function(_ref2){var name=_ref2.name,Poster=_ref2.Poster;return/*#__PURE__*/_jsx(Grid,{item:true,xs:4,md:3,sm:4,xl:6,lg:3,children:/*#__PURE__*/_jsx(MovieCard,{name:name,Poster:Poster})});})})}):\"No Result\"),!!error&&/*#__PURE__*/_jsx(\"div\",{className:styles.errorMessageContainer,children:JSON.stringify(error)})]})})})});};export default Home;","map":{"version":3,"sources":["D:/ReactWorkShop/src/pages/Home/index.tsx"],"names":["useState","styles","service","CONSTANTS","useInfiniteQuery","MovieCard","Skeleton","Grid","InfiniteScroll","Home","currentPage","setCurrentPage","fetchMovies","pageParam","get","BASE_URL","getNextPageParam","lastPage","pages","totalContent","onSuccess","data","error","fetchNextPage","hasNextPage","isSuccess","isLoading","refetch","remove","allItems","flatMap","page","contentItems","MoviesLoader","itemCount","Array","map","_","i","root","movieListContainer","length","overflow","name","Poster","errorMessageContainer","JSON","stringify"],"mappings":"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","sourcesContent":["import { useState, useEffect, ReactElement } from \"react\";\nimport styles from \"./index.module.css\";\nimport service from \"utils/service\";\nimport CONSTANTS from \"utils/constants\";\nimport { useInfiniteQuery } from \"react-query\";\nimport MovieCard, { MovieCardProps } from \"components/MovieCard\";\nimport Skeleton from \"components/MovieCard/Skeleton\";\nimport { Grid } from \"@material-ui/core\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst Home = (): ReactElement => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const fetchMovies = ({ pageParam = 1 }) =>\n  service.get(CONSTANTS.BASE_URL,`data/page${pageParam}.json`);\n  const {\n    data,\n    error,\n    fetchNextPage,\n    hasNextPage,\n    isSuccess,\n    isLoading,\n    refetch,\n    remove,\n  } = useInfiniteQuery(`movies`, fetchMovies, {\n    getNextPageParam: (lastPage, pages) => {      \n      return +lastPage.totalContent > currentPage * 20 ? currentPage + 1 : null;\n    },\n    onSuccess: () => {\n      setCurrentPage(currentPage + 1);\n    },\n  });\n\n  const allItems = data?.pages.flatMap((page) => page.contentItems) || [];\n    const MoviesLoader = (itemCount: number): ReactElement => {\n    return (\n      <Grid container spacing={2}>\n        {[...new Array(itemCount)].map((_, i: number) => (\n          <Grid item xs={12} md={3} sm={4} lg={12} xl={12} key={i}>\n            <Skeleton />\n          </Grid>\n        ))}\n      </Grid>\n    );\n  };\n\n  return (\n    <div className={styles.root}>\n      <Grid container justify=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Grid item xs={12} className={styles.movieListContainer}>\n            {/* Loading state */}\n            {isLoading && MoviesLoader(8)}\n\n            {/* Success state */}\n            {isSuccess &&\n              (!!data ? (\n                <InfiniteScroll\n                  dataLength={\n                    allItems.length\n                  }\n                  next={fetchNextPage}\n                  hasMore={hasNextPage || false}\n                  loader={MoviesLoader(4)}\n                  style={{ overflow: \"hidden\" }}\n                >\n                  <Grid container spacing={2}>\n                    {allItems.map(({\n                          name,\n                          Poster,\n                        }: MovieCardProps) => (\n                          <Grid item xs={4} md={3} sm={4} xl={6} lg={3}>\n                            <MovieCard\n                             {...{ name, Poster }}\n                            />\n                          </Grid>\n                        )\n                      )}\n                  </Grid>\n                </InfiniteScroll>\n              ) : (\n                \"No Result\"\n              ))}\n\n            {/* Error state */}\n            {!!error && (\n              <div className={styles.errorMessageContainer}>\n                {JSON.stringify(error)}\n              </div>\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}